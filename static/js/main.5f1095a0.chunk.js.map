{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","year","date","getFullYear","month","toLocaleString","day","ExpenseItem","title","price","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","SetenteredTitle","enteredAmount","SetenteredAmount","enteredDate","SetenteredDate","onSubmit","preventDefault","ExpenseData","onSaveExpenseData","type","min","step","NewExpense","isEditing","SetisEditing","onClick","enteredData","onAddExpense","onCancel","INITIAL_EXPENSES","App","AppendExpense","prevState","Date","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f1095a0.chunk.js","sourcesContent":["const Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const year = props.date.getFullYear();\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <div className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">{\"Rs. \" + props.price}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseItem;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <h2 className=\"expenses-list__fallback\"> Good Savings this year bro </h2>\n    );\n  }\n\n  return (\n    <ul>\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          price={expense.price}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.price;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <li>\n      <div>\n        <Card className=\"expenses\">\n          <ExpensesFilter\n            selected={filteredYear}\n            onChangeFilter={filterChangeHandler}\n          />\n          <ExpensesChart expenses={filteredExpenses} />\n          <ExpensesList items={filteredExpenses} />\n        </Card>\n      </div>\n    </li>\n  );\n};\n\nexport default Expenses;\n","import { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, SetenteredTitle] = useState(\"\");\n  const [enteredAmount, SetenteredAmount] = useState(\"\");\n  const [enteredDate, SetenteredDate] = useState(\"\");\n\n  const TitleChangeHandler = (event) => {\n    SetenteredTitle(event.target.value);\n  };\n  const AmountChangeHandler = (event) => {\n    SetenteredAmount(event.target.value);\n  };\n  const DateChangeHandler = (event) => {\n    SetenteredDate(event.target.value);\n  };\n\n  const SubmitFormHandler = (event) => {\n    event.preventDefault();\n    const ExpenseData = {\n      title: enteredTitle,\n      price: enteredAmount,\n      date: enteredDate,\n    };\n\n    props.onSaveExpenseData(ExpenseData);\n    SetenteredTitle(\"\");\n    SetenteredAmount(\"\");\n    SetenteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={SubmitFormHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={TitleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Price</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={AmountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-2-5\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={DateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, SetisEditing] = useState(false);\n\n  const SaveExpenseDataHandler = (enteredData) => {\n    props.onAddExpense(enteredData);\n    SetisEditing(false);\n  };\n\n  const StopEditingHandler = () => {\n    SetisEditing(false);\n  };\n  const StartEditingHandler = () => {\n    SetisEditing(true);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={StartEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={SaveExpenseDataHandler}\n          onCancel={StopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport Card from \"./components/UI/Card\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst INITIAL_EXPENSES = [];\n\nconst App = () => {\n  const [expenses, AppendExpense] = useState(INITIAL_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    AppendExpense((prevState) => {\n      expense.date = new Date(expense.date);\n      expense.id = \"e\" + prevState.length + 1;\n      return [expense, ...prevState];\n    });\n  };\n\n  return (\n    <Card>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </Card>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}